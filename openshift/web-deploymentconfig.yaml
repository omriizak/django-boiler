apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    kompose.cmd: kompose --provider openshift --file ../docker-compose.prod.yml convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    io.kompose.service: web
  strategy:
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web
    spec:
      containers:
      - args:
        - gunicorn
        - hello_django.wsgi:application
        - --bind
        - 0.0.0.0:8000
        env:
        - name: DATABASE
          valueFrom:
            configMapKeyRef:
              key: DATABASE
              name: env-prod
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: env-prod
        - name: DJANGO_ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              key: DJANGO_ALLOWED_HOSTS
              name: env-prod
        - name: SECRET_KEY
          valueFrom:
            configMapKeyRef:
              key: SECRET_KEY
              name: env-prod
        - name: SQL_DATABASE
          valueFrom:
            configMapKeyRef:
              key: SQL_DATABASE
              name: env-prod
        - name: SQL_ENGINE
          valueFrom:
            configMapKeyRef:
              key: SQL_ENGINE
              name: env-prod
        - name: SQL_HOST
          valueFrom:
            configMapKeyRef:
              key: SQL_HOST
              name: env-prod
        - name: SQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: SQL_PASSWORD
              name: env-prod
        - name: SQL_PORT
          valueFrom:
            configMapKeyRef:
              key: SQL_PORT
              name: env-prod
        - name: SQL_USER
          valueFrom:
            configMapKeyRef:
              key: SQL_USER
              name: env-prod
        image: ' '
        name: web
        ports:
        - containerPort: 8000
        resources: {}
        volumeMounts:
        - mountPath: /home/app/web/staticfiles
          name: static-volume
        - mountPath: /home/app/web/mediafiles
          name: media-volume
      restartPolicy: Always
      volumes:
      - name: static-volume
        persistentVolumeClaim:
          claimName: static-volume
      - name: media-volume
        persistentVolumeClaim:
          claimName: media-volume
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - web
      from:
        kind: ImageStreamTag
        name: web:latest
    type: ImageChange
status: {}
